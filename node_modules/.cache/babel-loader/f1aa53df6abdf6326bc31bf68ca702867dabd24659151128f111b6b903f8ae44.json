{"ast":null,"code":"var _jsxFileName = \"/Users/nunziolanza/Visual Studio/citi-furniture/src/components/Chat/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface({\n  roomImage,\n  children\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) {\n      return; // Exit if the input is only whitespace or empty.\n    }\n\n    const userMessage = {\n      sender: 'user',\n      content: inputValue\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await fetch(\"/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n\n      // This is where you log the raw server response for debugging\n      const rawResponse = await response.text();\n      console.log(\"Server Response:\", rawResponse);\n\n      // After logging, you try to parse it as JSON (make sure the response is actually valid JSON!)\n      const data = JSON.parse(rawResponse);\n      const gpt4Response = {\n        sender: 'gpt-4',\n        content: data.message\n      };\n      setMessages(prevMessages => [...prevMessages, gpt4Response]);\n    } catch (error) {\n      console.error(\"Error calling server:\", error);\n    }\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto',\n      fontFamily: 'Arial, sans-serif',\n      position: 'relative'\n    },\n    children: [roomImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: roomImage,\n      alt: \"Room View\",\n      style: {\n        width: '100%',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      style: {\n        position: 'relative',\n        height: 'calc(100vh - [your adjustments here])'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        style: {\n          border: '1px solid #ccc',\n          padding: '20px',\n          maxHeight: '400px',\n          overflowY: 'scroll',\n          borderRadius: '5px',\n          backgroundColor: '#f4f4f4'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        style: {\n          position: 'absolute',\n          bottom: '0',\n          width: '100%',\n          marginTop: '20px',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: \"Ask me anything...\",\n          style: {\n            width: '80%',\n            padding: '10px',\n            borderRadius: '5px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          style: {\n            width: '18%',\n            padding: '10px',\n            borderRadius: '5px',\n            backgroundColor: '#007BFF',\n            color: 'white',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: \"Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_s(ChatInterface, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","ChatMessage","jsxDEV","_jsxDEV","ChatInterface","roomImage","children","_s","messages","setMessages","inputValue","setInputValue","handleSendMessage","trim","userMessage","sender","content","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","rawResponse","text","console","log","data","parse","gpt4Response","error","style","maxWidth","margin","fontFamily","position","src","alt","width","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","className","height","border","padding","maxHeight","overflowY","borderRadius","backgroundColor","map","msg","index","bottom","marginTop","display","justifyContent","alignItems","value","onChange","e","target","placeholder","onClick","color","cursor","_c","$RefreshReg$"],"sources":["/Users/nunziolanza/Visual Studio/citi-furniture/src/components/Chat/ChatInterface.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatMessage from './ChatMessage';\n\nfunction ChatInterface({ roomImage, children }) {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) {\n      return; // Exit if the input is only whitespace or empty.\n    }\n\n    const userMessage = { sender: 'user', content: inputValue };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n\n    try {\n        const response = await fetch(\"/chat\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ message: inputValue })\n        });\n\n        // This is where you log the raw server response for debugging\n        const rawResponse = await response.text();\n        console.log(\"Server Response:\", rawResponse);\n\n        // After logging, you try to parse it as JSON (make sure the response is actually valid JSON!)\n        const data = JSON.parse(rawResponse);\n\n        const gpt4Response = { sender: 'gpt-4', content: data.message };\n        setMessages(prevMessages => [...prevMessages, gpt4Response]);\n\n    } catch (error) {\n        console.error(\"Error calling server:\", error);\n    }\n\n    setInputValue('');\n};\n\n\nreturn (\n  <div style={{ maxWidth: '600px', margin: 'auto', fontFamily: 'Arial, sans-serif', position: 'relative' }}>\n    {roomImage && <img src={roomImage} alt=\"Room View\" style={{ width: '100%', marginBottom: '20px' }} />}\n    {children}\n    <div className=\"chat-container\" style={{ position: 'relative', height: 'calc(100vh - [your adjustments here])'}}>\n      <div className=\"chat-window\" style={{ border: '1px solid #ccc', padding: '20px', maxHeight: '400px', overflowY: 'scroll', borderRadius: '5px', backgroundColor: '#f4f4f4' }}>\n        {messages.map((msg, index) => (\n          <ChatMessage key={index} message={msg} />\n        ))}\n      </div>\n      <div className=\"chat-input\" style={{ position: 'absolute', bottom: '0', width: '100%', marginTop: '20px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <input\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Ask me anything...\"\n          style={{ width: '80%', padding: '10px', borderRadius: '5px', border: '1px solid #ccc' }}\n        />\n        <button onClick={handleSendMessage} style={{ width: '18%', padding: '10px', borderRadius: '5px', backgroundColor: '#007BFF', color: 'white', border: 'none', cursor: 'pointer' }}>\n          Design\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\n}\n\nexport default ChatInterface;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}