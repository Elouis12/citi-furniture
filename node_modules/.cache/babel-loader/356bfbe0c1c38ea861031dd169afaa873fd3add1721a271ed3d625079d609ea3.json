{"ast":null,"code":"var _jsxFileName = \"/Users/nunziolanza/Visual Studio/citi-furniture/src/components/Chat/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface({\n  roomImage,\n  children\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) {\n      return; // Exit if the input is only whitespace or empty.\n    }\n\n    const userMessage = {\n      sender: 'user',\n      content: inputValue\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await fetch(\"/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: inputValue\n        })\n      });\n      const rawResponse = await response.text();\n      console.log(\"Server Response:\", rawResponse);\n      const data = JSON.parse(rawResponse);\n      const gpt4Response = {\n        sender: 'gpt-4',\n        content: data.message\n      };\n      setMessages(prevMessages => [...prevMessages, gpt4Response]);\n    } catch (error) {\n      console.error(\"Error calling server:\", error);\n    }\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto',\n      fontFamily: 'Roboto, sans-serif',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"src/Assets/decorAItor.png\",\n      alt: \"Logo\",\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px',\n        height: '50px',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), roomImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: roomImage,\n      alt: \"Room View\",\n      style: {\n        width: '100%',\n        marginBottom: '20px',\n        fontFamily: 'Roboto, sans-serif'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      style: {\n        flex: 1,\n        border: '1px solid #ccc',\n        padding: '20px',\n        maxHeight: '400px',\n        overflowY: 'scroll',\n        borderRadius: '5px',\n        backgroundColor: '#f4f4f4',\n        fontFamily: 'Roboto, sans-serif'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      style: {\n        marginTop: '20px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        fontFamily: 'Roboto, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Give me design ideas\",\n        style: {\n          width: '80%',\n          padding: '10px',\n          borderRadius: '5px',\n          border: '1px solid #ccc',\n          fontFamily: 'Roboto, sans-serif'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"robotoFont\",\n        onClick: handleSendMessage,\n        style: {\n          width: '18%',\n          padding: '10px',\n          borderRadius: '5px',\n          backgroundColor: 'black',\n          color: 'white',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","ChatMessage","jsxDEV","_jsxDEV","ChatInterface","roomImage","children","_s","messages","setMessages","inputValue","setInputValue","handleSendMessage","trim","userMessage","sender","content","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","rawResponse","text","console","log","data","parse","gpt4Response","error","style","maxWidth","margin","fontFamily","display","flexDirection","height","src","alt","position","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","width","marginBottom","className","flex","border","padding","maxHeight","overflowY","borderRadius","backgroundColor","map","msg","index","marginTop","justifyContent","alignItems","value","onChange","e","target","placeholder","onClick","color","cursor","_c","$RefreshReg$"],"sources":["/Users/nunziolanza/Visual Studio/citi-furniture/src/components/Chat/ChatInterface.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatMessage from './ChatMessage';\n\nfunction ChatInterface({ roomImage, children }) {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) {\n      return; // Exit if the input is only whitespace or empty.\n    }\n\n    const userMessage = { sender: 'user', content: inputValue };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n\n    try {\n      const response = await fetch(\"/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ message: inputValue })\n      });\n\n      const rawResponse = await response.text();\n      console.log(\"Server Response:\", rawResponse);\n\n      const data = JSON.parse(rawResponse);\n\n      const gpt4Response = { sender: 'gpt-4', content: data.message };\n      setMessages(prevMessages => [...prevMessages, gpt4Response]);\n\n    } catch (error) {\n      console.error(\"Error calling server:\", error);\n    }\n\n    setInputValue('');\n  };\n\n  return (\n    <div style={{ maxWidth: '600px', margin: 'auto', fontFamily: 'Roboto, sans-serif', display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      <img src=\"src/Assets/decorAItor.png\" alt=\"Logo\" style={{ position: 'absolute', top: '10px', left: '10px', height: '50px', zIndex: 1 }} />\n      {roomImage && <img src={roomImage} alt=\"Room View\" style={{ width: '100%', marginBottom: '20px', fontFamily: 'Roboto, sans-serif' }} />}\n      {children}\n      <div className=\"chat-window\" style={{ flex: 1, border: '1px solid #ccc', padding: '20px', maxHeight: '400px', overflowY: 'scroll', borderRadius: '5px', backgroundColor: '#f4f4f4', fontFamily: 'Roboto, sans-serif' }}>\n        {messages.map((msg, index) => (\n          <ChatMessage key={index} message={msg} />\n        ))}\n      </div>\n      <div className=\"chat-input\" style={{ marginTop: '20px', display: 'flex', justifyContent: 'space-between', alignItems: 'center', fontFamily: 'Roboto, sans-serif' }}>\n        <input\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Give me design ideas\"\n          style={{ width: '80%', padding: '10px', borderRadius: '5px', border: '1px solid #ccc', fontFamily: 'Roboto, sans-serif' }}\n        />\n        <button \n          className=\"robotoFont\"\n          onClick={handleSendMessage} \n          style={{ \n            width: '18%', \n            padding: '10px', \n            borderRadius: '5px', \n            backgroundColor: 'black', \n            color: 'white', \n            border: 'none', \n            cursor: 'pointer'\n          }}>\n          Design\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}